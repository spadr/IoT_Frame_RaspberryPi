version: "3.7"

services:

  app:
    build:
      context: ./app
      dockerfile: Dockerfile_raspi
    command: gunicorn iotproject.wsgi:application --bind 0.0.0.0:8000 --workers=2
    working_dir: /usr/src/app/
    #restart: always
    volumes:
      - ./app:/usr/src/app
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - front
      - back
  
  db:
    image: postgres:12.0-alpine
    #restart: always
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    networks:
      - back
  
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    #restart: always
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    #ports:
    #  - 80:81
    expose:
      - 8100
    depends_on:
      - app
    networks:
      - front

  https-portal:
    container_name: https-portal
    image: steveltn/https-portal
    ports:
      - "443:443"
      - "80:80"
    environment:
      #STAGE: 'production'
      STAGE: local
      DOMAINS: '192.168.10.117 -> http://nginx:8100/'
      TZ: Asia/Tokyo
    networks:
      - front
    depends_on:
      - nginx
    #restart: always
    volumes:
      - ./https/192.168.10.117.conf.erb:/var/lib/nginx-conf/192.168.10.117.conf.erb:ro
      - ./https/192.168.10.117.ssl.conf.erb:/var/lib/nginx-conf/192.168.10.117.ssl.conf.erb:ro
      - ./https/ssl_certs:/var/lib/https-portal
  
volumes:
  db_data:
  static_volume:
  media_volume:

    
networks:
  front:
    external: false
  back:
    external: false
